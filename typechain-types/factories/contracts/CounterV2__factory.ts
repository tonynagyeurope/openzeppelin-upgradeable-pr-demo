/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { CounterV2, CounterV2Interface } from "../../contracts/CounterV2";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialValue",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newValue",
        type: "uint256",
      },
    ],
    name: "reinitialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b5c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d09de08a1161005b578063d09de08a146100f1578063f2fde38b146100fb578063fe4b84df14610117578063ffb6c6b61461013357610088565b80630d8e6e2c1461008d57806361bc221a146100ab578063715018a6146100c95780638da5cb5b146100d3575b600080fd5b61009561014f565b6040516100a291906108a8565b60405180910390f35b6100b361018c565b6040516100c091906108e3565b60405180910390f35b6100d1610192565b005b6100db6101a6565b6040516100e8919061093f565b60405180910390f35b6100f96101de565b005b6101156004803603810190610110919061098b565b6101f7565b005b610131600480360381019061012c91906109e4565b61027d565b005b61014d600480360381019061014891906109e4565b610413565b005b60606040518060400160405280600281526020017f7632000000000000000000000000000000000000000000000000000000000000815250905090565b60005481565b61019a610551565b6101a460006105d8565b565b6000806101b16106af565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000808154809291906101f090610a40565b9190505550565b6101ff610551565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102715760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610268919061093f565b60405180910390fd5b61027a816105d8565b50565b60006102876106d7565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156102d55750825b9050600060018367ffffffffffffffff1614801561030a575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610318575080155b1561034f576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561039f5760018560000160086101000a81548160ff0219169083151502179055505b6103a8336106eb565b85600081905550831561040b5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516104029190610ae1565b60405180910390a15b505050505050565b61041b610551565b600260006104276106d7565b90508060000160089054906101000a900460ff168061047257508167ffffffffffffffff168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1610155b156104a9576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b818160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060018160000160086101000a81548160ff0219169083151502179055508260008190555060008160000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2826040516105449190610b0b565b60405180910390a1505050565b6105596106ff565b73ffffffffffffffffffffffffffffffffffffffff166105776101a6565b73ffffffffffffffffffffffffffffffffffffffff16146105d65761059a6106ff565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105cd919061093f565b60405180910390fd5b565b60006105e26106af565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6000806106e2610707565b90508091505090565b6106f3610732565b6106fc81610772565b50565b600033905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b61073a6107f8565b610770576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61077a610732565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107ec5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107e3919061093f565b60405180910390fd5b6107f5816105d8565b50565b60006108026106d7565b60000160089054906101000a900460ff16905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610852578082015181840152602081019050610837565b60008484015250505050565b6000601f19601f8301169050919050565b600061087a82610818565b6108848185610823565b9350610894818560208601610834565b61089d8161085e565b840191505092915050565b600060208201905081810360008301526108c2818461086f565b905092915050565b6000819050919050565b6108dd816108ca565b82525050565b60006020820190506108f860008301846108d4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610929826108fe565b9050919050565b6109398161091e565b82525050565b60006020820190506109546000830184610930565b92915050565b600080fd5b6109688161091e565b811461097357600080fd5b50565b6000813590506109858161095f565b92915050565b6000602082840312156109a1576109a061095a565b5b60006109af84828501610976565b91505092915050565b6109c1816108ca565b81146109cc57600080fd5b50565b6000813590506109de816109b8565b92915050565b6000602082840312156109fa576109f961095a565b5b6000610a08848285016109cf565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a4b826108ca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a7d57610a7c610a11565b5b600182019050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000610acb610ac6610ac184610a88565b610aa6565b610a92565b9050919050565b610adb81610ab0565b82525050565b6000602082019050610af66000830184610ad2565b92915050565b610b0581610a92565b82525050565b6000602082019050610b206000830184610afc565b9291505056fea2646970667358221220fd426fee363b5bf23b73c3583907cf736c4957737e868a47c69519cfab5e6d0164736f6c63430008180033";

type CounterV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CounterV2__factory extends ContractFactory {
  constructor(...args: CounterV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CounterV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CounterV2__factory {
    return super.connect(runner) as CounterV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterV2Interface {
    return new Interface(_abi) as CounterV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): CounterV2 {
    return new Contract(address, _abi, runner) as unknown as CounterV2;
  }
}
