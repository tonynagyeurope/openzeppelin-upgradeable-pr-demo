/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { CounterV1, CounterV1Interface } from "../../contracts/CounterV1";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialValue",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506109cd806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c8578063d09de08a146100e6578063f2fde38b146100f0578063fe4b84df1461010c5761007d565b80630d8e6e2c1461008257806361bc221a146100a0578063715018a6146100be575b600080fd5b61008a610128565b6040516100979190610743565b60405180910390f35b6100a8610165565b6040516100b5919061077e565b60405180910390f35b6100c661016b565b005b6100d061017f565b6040516100dd91906107da565b60405180910390f35b6100ee6101b7565b005b61010a60048036038101906101059190610826565b6101d0565b005b6101266004803603810190610121919061087f565b610256565b005b60606040518060400160405280600281526020017f7631000000000000000000000000000000000000000000000000000000000000815250905090565b60005481565b6101736103ec565b61017d6000610473565b565b60008061018a61054a565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000808154809291906101c9906108db565b9190505550565b6101d86103ec565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361024a5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161024191906107da565b60405180910390fd5b61025381610473565b50565b6000610260610572565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156102ae5750825b9050600060018367ffffffffffffffff161480156102e3575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156102f1575080155b15610328576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156103785760018560000160086101000a81548160ff0219169083151502179055505b61038133610586565b8560008190555083156103e45760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516103db919061097c565b60405180910390a15b505050505050565b6103f461059a565b73ffffffffffffffffffffffffffffffffffffffff1661041261017f565b73ffffffffffffffffffffffffffffffffffffffff16146104715761043561059a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161046891906107da565b60405180910390fd5b565b600061047d61054a565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60008061057d6105a2565b90508091505090565b61058e6105cd565b6105978161060d565b50565b600033905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6105d5610693565b61060b576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6106156105cd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106875760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161067e91906107da565b60405180910390fd5b61069081610473565b50565b600061069d610572565b60000160089054906101000a900460ff16905090565b600081519050919050565b600082825260208201905092915050565b60005b838110156106ed5780820151818401526020810190506106d2565b60008484015250505050565b6000601f19601f8301169050919050565b6000610715826106b3565b61071f81856106be565b935061072f8185602086016106cf565b610738816106f9565b840191505092915050565b6000602082019050818103600083015261075d818461070a565b905092915050565b6000819050919050565b61077881610765565b82525050565b6000602082019050610793600083018461076f565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107c482610799565b9050919050565b6107d4816107b9565b82525050565b60006020820190506107ef60008301846107cb565b92915050565b600080fd5b610803816107b9565b811461080e57600080fd5b50565b600081359050610820816107fa565b92915050565b60006020828403121561083c5761083b6107f5565b5b600061084a84828501610811565b91505092915050565b61085c81610765565b811461086757600080fd5b50565b60008135905061087981610853565b92915050565b600060208284031215610895576108946107f5565b5b60006108a38482850161086a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108e682610765565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610918576109176108ac565b5b600182019050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061096661096161095c84610923565b610941565b61092d565b9050919050565b6109768161094b565b82525050565b6000602082019050610991600083018461096d565b9291505056fea26469706673582212208d5f292e0e63b51fb11b7048407c5b84214081c5452dd5d889eb3d08e03e7cba64736f6c63430008180033";

type CounterV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CounterV1__factory extends ContractFactory {
  constructor(...args: CounterV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CounterV1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CounterV1__factory {
    return super.connect(runner) as CounterV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterV1Interface {
    return new Interface(_abi) as CounterV1Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): CounterV1 {
    return new Contract(address, _abi, runner) as unknown as CounterV1;
  }
}
